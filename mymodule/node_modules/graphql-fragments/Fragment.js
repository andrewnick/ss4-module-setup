"use strict";
var graphql_anywhere_1 = require('graphql-anywhere');
var getFromAST_1 = require('graphql-anywhere/lib/src/getFromAST');
var Fragment = (function () {
    function Fragment(document) {
        var children = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            children[_i - 1] = arguments[_i];
        }
        this.document = document;
        this.children = children;
        this.propType = this.propType.bind(this);
    }
    Fragment.prototype.childFragments = function () {
        return (_a = []).concat.apply(_a, this.children.map(function (c) { return c.fragments(); }));
        var _a;
    };
    Fragment.prototype.fragmentDocument = function () {
        return getFromAST_1.addFragmentsToDocument(this.document, this.childFragments());
    };
    Fragment.prototype.fragments = function () {
        return getFromAST_1.getFragmentDefinitions(this.fragmentDocument());
    };
    Fragment.prototype.filter = function (data) {
        var resolver = function (fieldName, root, args, context, info) {
            return root[info.resultKey];
        };
        return graphql_anywhere_1.default(resolver, this.fragmentDocument(), data);
    };
    Fragment.prototype.check = function (data) {
        var resolver = function (fieldName, root, args, context, info) {
            if (!{}.hasOwnProperty.call(root, info.resultKey)) {
                throw new Error(info.resultKey + " missing on " + root);
            }
            return root[info.resultKey];
        };
        graphql_anywhere_1.default(resolver, this.fragmentDocument(), data, {}, {}, {
            fragmentMatcher: function () { return false; },
        });
    };
    Fragment.prototype.propType = function (props, propName) {
        var prop = props[propName];
        try {
            this.check(prop);
            return null;
        }
        catch (e) {
            return e;
        }
    };
    return Fragment;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Fragment;
//# sourceMappingURL=Fragment.js.map